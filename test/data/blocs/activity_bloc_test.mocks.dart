// Mocks generated by Mockito 5.3.0 from annotations
// in max_sports/test/data/blocs/activity_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:max_sports/data/backend_api.dart' as _i2;
import 'package:max_sports/data/entities/activity.dart' as _i7;
import 'package:max_sports/data/entities/api_response.dart' as _i3;
import 'package:max_sports/data/entities/type_activity.dart' as _i6;
import 'package:max_sports/data/repositories/activity_repository.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeBackendApi_0 extends _i1.SmartFake implements _i2.BackendApi {
  _FakeBackendApi_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAPIResponse_1<T> extends _i1.SmartFake
    implements _i3.APIResponse<T> {
  _FakeAPIResponse_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [ActivityRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockActivityRepository extends _i1.Mock
    implements _i4.ActivityRepository {
  MockActivityRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.BackendApi get api => (super.noSuchMethod(Invocation.getter(#api),
          returnValue: _FakeBackendApi_0(this, Invocation.getter(#api)))
      as _i2.BackendApi);
  @override
  _i5.Future<_i3.APIResponse<List<_i6.TypeActivity>?>> getTypesActivities() =>
      (super.noSuchMethod(Invocation.method(#getTypesActivities, []),
              returnValue:
                  _i5.Future<_i3.APIResponse<List<_i6.TypeActivity>?>>.value(
                      _FakeAPIResponse_1<List<_i6.TypeActivity>?>(
                          this, Invocation.method(#getTypesActivities, []))))
          as _i5.Future<_i3.APIResponse<List<_i6.TypeActivity>?>>);
  @override
  _i5.Future<_i3.APIResponse<_i7.Activity?>> postActivity(
          _i7.Activity? activity) =>
      (super.noSuchMethod(Invocation.method(#postActivity, [activity]),
              returnValue: _i5.Future<_i3.APIResponse<_i7.Activity?>>.value(
                  _FakeAPIResponse_1<_i7.Activity?>(
                      this, Invocation.method(#postActivity, [activity]))))
          as _i5.Future<_i3.APIResponse<_i7.Activity?>>);
}
